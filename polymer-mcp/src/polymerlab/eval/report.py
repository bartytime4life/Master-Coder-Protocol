"""
HTML Report generation for a run directory containing model + metrics + (optional) conformal.json.
"""
from __future__ import annotations

import json
import os

from jinja2 import Template


def generate_html(run_dir: str, out_html: str) -> str:
    metrics = {}
    conformal = {}
    metrics_path = os.path.join(run_dir, "metrics.json")
    conf_path = os.path.join(run_dir, "conformal.json")
    if os.path.exists(metrics_path):
        metrics = json.load(open(metrics_path, "r", encoding="utf-8"))
    if os.path.exists(conf_path):
        conformal = json.load(open(conf_path, "r", encoding="utf-8"))

    tmpl = Template("""<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>MCP Polymers — Run Report</title>
  <style>
    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; padding: 24px; }
    h1, h2 { margin: 0 0 12px 0; }
    .card { border: 1px solid #ddd; border-radius: 10px; padding: 16px; margin-bottom: 16px; }
    code { background: #f6f8fa; padding: 2px 4px; border-radius: 4px; }
    table { border-collapse: collapse; }
    td, th { padding: 6px 10px; border-bottom: 1px solid #eee; text-align: left; }
  </style>
</head>
<body>
  <h1>MCP Polymers — Run Report</h1>
  <div class="card">
    <h2>Run Directory</h2>
    <code>{{ run_dir }}</code>
  </div>
  <div class="card">
    <h2>Metrics</h2>
    {% if metrics %}
      <table>
        <tbody>
        {% for k,v in metrics.items() %}
          <tr><th>{{k}}</th><td>{{v}}</td></tr>
        {% endfor %}
        </tbody>
      </table>
    {% else %}
      <p>No metrics found.</p>
    {% endif %}
  </div>
  <div class="card">
    <h2>Conformal Calibration</h2>
    {% if conformal %}
      <table>
        <tbody>
        {% for k,v in conformal.items() %}
          <tr><th>{{k}}</th><td>{{v}}</td></tr>
        {% endfor %}
        </tbody>
      </table>
    {% else %}
      <p>No conformal.json found.</p>
    {% endif %}
  </div>
  <p style="color:#888">Generated by polymerlab.eval.report</p>
</body>
</html>""")
    html = tmpl.render(run_dir=run_dir, metrics=metrics, conformal=conformal)
    os.makedirs(os.path.dirname(out_html), exist_ok=True)
    with open(out_html, "w", encoding="utf-8") as f:
        f.write(html)
    return out_html
